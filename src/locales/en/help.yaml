---
topics:
  list-entry: "*{{title}}* - {{description}}"
  message: |-
    # {{title}}

    {{body}}
about:
  title: About Roll It
  description: Author and license info
  lines:
    - >
      [Homepage](<https://aurule.github.io/roll-it/#/>)
      | [Source](<https://github.com/aurule/roll-it>)
      | [Privacy Policy](<https://aurule.github.io/roll-it/#/privacy>)
      | [Terms of Service](<https://aurule.github.io/roll-it/#/terms>)
    - >
      [<:KofiCoffee_112:1291129201767743578> Support me on Ko-fi](<https://ko-fi.com/paige2501>)
    - >-
      Roll It is a Discord bot for rolling dice, and a passion project by Paige Andrews. It is built on NodeJS
      using the excellent discord.js library, among others. Roll It is open source software released under the
      [MIT license](<https://aurule.github.io/roll-it/#/license>). The source code is available at
      <https://github.com/aurule/roll-it> and contributions are welcome!
commands:
  title: Commands
  description: How to use slash commands and what's available
  lines:
    - >
      Roll It uses slash commands to roll dice using different built-in dice mechanics. Slash commands are
      started by typing a `/` character and then the name of the command. Discord will
      suggest commands as you type. To accept a suggestion, click it from the list that pops up or hit the
      `Tab` key.
    - >
      Commands usually accept one or more arguments. These are used to pass information to the command, like
      the size of a dice pool. Once you've selected a command, Discord will let you fill in
      its required arguments. When you're done with an argument, press `Tab` on desktop to
      move to the next one. After the required arguments have been filled out, Discord will show you the
      command's optional arguments in a list, like it did for the command names. Press `Tab`
      or select the argument name to begin filling it in.
    - >
      Server managers can set which roll commands are available. See the help for the `/setup-roll-it` command
      to learn more.
    - >-
      Here are all of the commands that Roll It knows:
    - >-
      {{commands, ul}}
changes:
  title: Recent Changes
  description: See what's new!
  lines:
    - >
      Roll It is on version {{version}}. Here's what's new!
    - >
      {{changelog}}
    - >-
      Older change logs can be found on [Roll It's website](<https://aurule.github.io/roll-it/#/versions>) or
      on [github](<https://github.com/aurule/roll-it/tree/master/changelog>).
  missing: No changelog available for {{version}}.
saved:
  title: Saved Rolls
  description: How to save rolls and use them later
  lines:
    - >
      _You can also read about [Saved Rolls on the Roll It Website](<https://aurule.github.io/roll-it/#/features/saved>)_
    - >
      When you need to use a complicated roll over and over again, Roll It can save that roll so you don't
      have to type out (and remember) the whole thing each time. In order to save a roll, you need three
      parts:
    - >-
      1. A name for the saved roll. This is how you will find it if you save more than one, so the name has
      to be unique.
    - >-
      2. A description for the saved roll. This should describe what the roll does, and will be shown as the
      default description each time you use that saved roll.
    - >
      3. The command and its options. This does the actual rolling, so it's super important.
    - >
      In order to save all this, Roll It uses a pair of commands. The first is a normal slash command,
      `/saved set`, which stores the name and description. The second is a context command (more on those in
      a moment) named *Save this roll*, which stores the command and its options. That's it! Once you've saved
      all three parts, you're ready to use your saved roll.
    - >-
      You can save the parts of a new roll in any order. You can start with *Save this roll* if you realize you
      want to save the roll you just made, or with `/saved set` if you have a name in mind first. Roll It
      will save one incomplete command at a time for you to finish up later.
    - >-
      ## Starting With a Command
    - >
      *Save this roll* is the first context command in Roll It, so it might need some explaining. A context
      command is a bot action that is not typed out, but is used through a menu within Discord. To get to
      that menu, you need to take different steps depending on whether you're using Discord on your phone or
      on a computer. With a phone, you long-press on a message to show the menu. On a computer, you
      right-click the message. Once that context menu shows up, you select the `Apps` item
      and a smaller menu opens up. That's where you can find *Save this roll*.
    - >
      *Save this roll* lets you save a command that you've just used. To do so, use *Save this roll* on the message
      with that command's results. It will read that result message and save the command and options that
      were used to create it. Then, it will prompt you to take the next step and use `/saved set` to finish
      up your saved roll with a name and a description.
    - >
      > For an example, let's say you used `/roll pool:2 sides:6` and Roll It replied with
      `@you rolled 9 (2d6: [5,4])`. By long pressing or right clicking on
      `@you rolled 9 (2d6: [5,4])`, you select `Apps` and then *Save this roll*.
      Roll It reads the message and determines that you used the `/roll` command with a
      `pool` of 2 and `sides` of 6. It saves that, and tells you to run
      `/saved set` to save the name and description. Once you do, you can use your roll!
    - >-
      Not all commands can be saved. Some do not roll actual dice (like `/table roll` or
      `/help`), or don't have re-usable options (like `/coin`), or are so
      simple that it's more effort to use a saved roll than to just use the options. Here are the commands
      that can be saved:
    - >-
      {{savable, ul}}
    - >-
      ## Starting With a Name
    - >
      As noted, you can also begin making a new saved roll with `/saved set` and supplying a
      `name` and `description`. `/saved set` will reply with instructions to
      use *Save this roll* to save the command and options. Once you do, your roll is ready to go!
    - >-
      The name of the roll has a single special limitation: you, personally, cannot have two rolls in the
      same server with the same name.
    - >-
      # Rolling It
    - >
      Once you have a saved roll, you can start using it with `/saved roll`. It takes the name of a saved roll and
      runs the command and options you stored. It also takes a `bonus`, which lets you add to
      the command's options on the fly. See the help for `/saved roll` to learn more.
    - >
      You can see the rolls you've saved by using the `/saved list` command. That will also warn you if you have
      an unfinished roll, or one whose options are no longer valid. In either case, you'll have to update
      the roll in order to use it.
    - >-
      So how do you update a saved roll? By using `/saved manage` or  `/saved grow`! The  `/saved grow` command lets you make
      small changes to a roll to keep it in sync with a character sheet. The more involved `/saved manage` lets
      you remove or edit a roll as needed. See the help for `/saved grow` and `/saved manage` to learn more.
    - >-
      ## Advanced Usage: The Invocation
    - >
      So far we've assumed that you're using both `/saved set` and *Save this roll* in order to build your saved
      commands. But what if you're a power user in a rush? Well, `/saved set` has you covered. It has an
      advanced third option called `invocation` which lets you save a command and its options
      alongside the name and description for the saved roll. The only catch is that you have to type the
      whole command manually in a specific format, remembering the option names and everything. That's why I
      suggest using the *Save this roll* command instead of entering an `invocation`.
    - >-
      The format for an invocation looks like `/command option:value`. So for example,
      `/roll pool:2 sides:6` or `/wod20 pool:7 difficulty:6 specialty:true`
      are both valid invocations. When you supply an invocation along with a name and description, the
      saved roll is complete and you can use it right away.
systems:
  title: Dice Systems
  description: The dice mechanics that Roll It supports
  lines:
    - >
      Although you *can* use the `/roll` and `/roll-formula` commands to roll dice for basically any system
      you can think of, some systems have complex rules. Counting successes, exploding dice, or comparing
      different tallies is doable, but annoying with generic rollers. It's much easier if all that math is
      handled for you, which is where Roll It's game-specific commands come to the rescue.
    - >
      Here's the list of game systems whose dice mechanics have a command in Roll It, along with any caveats.
      As always, the help info for a specific command will have more info than what's here. To read in more
      detail, see the [Systems page](<https://aurule.github.io/roll-it/#/systems>) on Roll It's website.
    - >-
      {{systems, ul}}
