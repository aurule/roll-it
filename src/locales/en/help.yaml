---
topics:
  list-entry: "*{{title}}* - {{description}}"
  message: |-
    # {{title}}

    {{body}}
about:
  title: About Roll It
  description: Author and license info
  lines:
    - >
      [Homepage](<https://aurule.github.io/roll-it/#/>)
      | [Source](<https://github.com/aurule/roll-it>)
      | [Privacy Policy](<https://aurule.github.io/roll-it/#/privacy>)
      | [Terms of Service](<https://aurule.github.io/roll-it/#/terms>)
    - >
      [<:KofiCoffee_112:1291129201767743578> Support me on Ko-fi](<https://ko-fi.com/paige2501>)
    - >-
      Roll It is a Discord bot for rolling dice, and a passion project by Paige Andrews. It is built on NodeJS
      using the excellent discord.js library, among others. Roll It is open source software released under the
      [MIT license](<https://aurule.github.io/roll-it/#/license>). The source code is available at
      <https://github.com/aurule/roll-it> and contributions are welcome!
commands:
  title: Commands
  description: How to use slash commands and what's available
  lines:
    - >
      Roll It uses slash commands to roll dice using different built-in dice mechanics. Slash commands are
      started by typing a `/` character and then the name of the command. Discord will
      suggest commands as you type. To accept a suggestion, click it from the list that pops up or hit the
      `Tab` key.
    - >
      Commands usually accept one or more arguments. These are used to pass information to the command, like
      the size of a dice pool. Once you've selected a command, Discord will let you fill in
      its required arguments. When you're done with an argument, press `Tab` on desktop to
      move to the next one. After the required arguments have been filled out, Discord will show you the
      command's optional arguments in a list, like it did for the command names. Press `Tab`
      or select the argument name to begin filling it in.
    - >
      Server managers can set which roll commands are available. See the help for the `/setup-roll-it` command
      to learn more.
    - >-
      Here are all of the commands that Roll It knows:
    - >-
      {{commands, ul}}
changes:
  title: Recent Changes
  description: See what's new!
  lines:
    - >
      Roll It is on version {{version}}. Here's what's new!
    - >
      {{changelog}}
    - >-
      Older change logs can be found on [Roll It's website](<https://aurule.github.io/roll-it/#/versions>) or
      on [github](<https://github.com/aurule/roll-it/tree/master/changelog>).
  missing: No changelog available for {{version}}.
saved:
  title: Saved Rolls
  description: How to save rolls and use them later
  lines:
    - >
      _You can also read about [Saved Rolls on the Roll It Website](<https://aurule.github.io/roll-it/#/features/saved>)_
    - >
      When you need to use a complicated roll over and over again, Roll It can save that roll so you don't
      have to type out (and remember) the whole thing each time. In order to save a roll, you need three
      parts:
    - >-
      1. A name for the saved roll. This is how you will find it if you save more than one, so the name has
      to be unique.
    - >-
      2. A description for the saved roll. This should describe what the roll does, and will be shown as the
      default description each time you use that saved roll.
    - >
      3. The command and its options. Roll It gets these automatically, so you don't have to type them in.
    - >
      In order to save all this, Roll It uses a context command called *Save this roll*. When you run it on a
      roll result message, it will prompt you for the name and description for your new roll. Once it's saved,
      you can use it!
    - >
      *Save this roll* is the first context command in Roll It, so it might need some explaining. A context
      command is a bot action that is not typed out, but is used through a menu within Discord. To get to
      that menu, you need to take different steps depending on whether you're using Discord on your phone or
      on a computer. With a phone, you long-press on a message to show the menu. On a computer, you
      right-click the message. Once that context menu shows up, you select the `Apps` item and a smaller menu
      opens up. That's where you can find *Save this roll*.
    - >
      > For an example, let's say you used `/roll pool:2 sides:6` and Roll It replied with
      `@you rolled 9 (2d6: [5,4])`. By long pressing or right clicking on
      `@you rolled 9 (2d6: [5,4])`, you select `Apps` and then *Save this roll*.
      Roll It reads the message and determines that you used the `/roll` command with a
      `pool` of 2 and `sides` of 6. It saves that, and shows a window asking you to give it a name and
      description. Once you do, you can use your roll!
    - >-
      Not all commands can be saved. Some do not roll actual dice (like `/table roll` or `/help`), don't have
      re-usable options (like `/coin`), or are so simple that it's more effort to use a saved roll than to
      just use the options. Here are the commands that can be saved:
    - >
      {{savable, ul}}
    - >-
      It is not possible to save secret rolls. If you want to save something, it has to be publicly visible.
    - >-
      # Rolling It
    - >
      Once you have a saved roll, you can start using it with `/saved roll`. It takes the name of a saved roll
      and runs the command and options you stored. It also takes a `bonus`, which lets you add (or subtract)
      a number to the command's options on the fly. See the help for `/saved roll` to learn more.
    - >
      You can see the rolls you've saved by using the `/saved list` command. That will also warn you if you
      have a roll whose options are no longer valid. In that case, you'll have to replace the roll in order to
      use it.
    - >-
      How do you update a saved roll? By using `/saved manage` or `/saved grow`! The `/saved grow` command
      lets you make small changes to a roll to keep it up to date with a character sheet. The more involved
      `/saved manage` lets you remove a roll or edit its name and description. See the help for `/saved grow`
      and `/saved manage` to learn more. To change all of a roll's options, it's usually easier to overwrite
      it with a new roll than to run `/saved grow` a bunch of times.
systems:
  title: Dice Systems
  description: The dice mechanics that Roll It supports
  lines:
    - >
      Although you *can* use the `/roll` and `/roll-formula` commands to roll dice for basically any system
      you can think of, some systems have complex rules. Counting successes, exploding dice, or comparing
      different tallies is doable, but annoying with generic rollers. It's much easier if all that math is
      handled for you, which is where Roll It's game-specific commands come to the rescue.
    - >
      Here's the list of game systems whose dice mechanics have a command in Roll It, along with any caveats.
      As always, the help info for a specific command will have more info than what's here. To read in more
      detail, see the [Systems page](<https://aurule.github.io/roll-it/#/systems>) on Roll It's website.
    - >-
      {{systems, ul}}
teamwork:
  title: Teamwork Tests
  description: An explanation of how to do special teamwork tests
  lines:
    - >
      Most systems have some way for other players to try and help out with a large or complex task. This is
      usually straightforward, like adding a static bonus. Some systems are more complicated than that.
    - >
      First added for the *New World of Darkness* system, the special `teamwork` mode makes it easy to collect
      the contributions of multiple helpers so that the leader can roll the final pool. The general mechanic
      is that helpers roll their own dice pool for the group action, and each success they score adds a die to
      the leader's final dice pool. When they're ready, the leader rolls that final pool.
    - >
      When a teamwork test begins, Roll It will show a prompt asking for contributions and offering a few
      controls to the test leader. At this point, helpers can make their own rolls to see how many dice they
      contribute to the group effort. Anyone can contribute by replying to the prompt, or to any message with
      a helper summary. The test leader can also request that specific people help them. The summary will show
      those people with a ✅ or a ❌, depending on whether they've added dice yet.
    - >-
      Most dice systems do not use this particular kind of teamwork test, so it's only supported by the
      rollers that need it. Here are the commands that allow teamwork tests:
    - >
      {{teamworkable, ul}}
    - >-
      Note that teamwork tests disallow certain options, like multiple rolls, so check the command's own help
      if you run into problems.
